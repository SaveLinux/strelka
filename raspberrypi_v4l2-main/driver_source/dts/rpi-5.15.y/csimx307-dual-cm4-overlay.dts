// SPDX-License-Identifier: GPL-2.0-only
// Definitions for CS-MIPI-IMX307 camera module on VC I2C bus
/dts-v1/;
/plugin/;

//#include <dt-bindings/gpio/gpio.h>

/{
	compatible = "brcm,bcm2835";

	fragment@0 {
		target = <&i2c0if>;
		__overlay__ {
			status = "okay";
		};
	};

	clk_frag: fragment@1 {
		target = <&cam1_clk>;
		__overlay__ {
			status = "okay";
			clock-frequency = <24000000>;
		};
	};

	fragment@2 {
		target = <&i2c0mux>;
		__overlay__ {
			status = "okay";
		};
	};
	i2c_frag: fragment@100 {
		target = <&i2c_csi_dsi>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			csimx307@3b {
				compatible = "veye,csimx307";
				reg = <0x3b>;
				status = "okay";


				rotation = <0>;

				port {
					csimx307_0: endpoint {
						remote-endpoint = <&csi_ep>;
						clock-lanes = <0>;
						data-lanes = <1 2>;
						clock-noncontinuous;
						link-frequencies =
							/bits/ 64 <297000000>;
					};
				};
			};
		};
	};

	csi_frag: fragment@101 {
		target = <&csi1>;
		csi: __overlay__ {
			status = "okay";

			port {
				csi1_ep: endpoint {
					remote-endpoint = <&csimx307_0>;
					clock-lanes = <0>;
					data-lanes = <1 2>;
					clock-noncontinuous;
				};
			};
		};
	};
    i2c_frag2: fragment@102 {
		target = <&i2c0>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";
            csimx307@3b {
				compatible = "veye,csimx307";
				reg = <0x3b>;
				status = "okay";


				rotation = <0>;

				port {
					csimx307_1: endpoint {
						remote-endpoint = <&csi0_ep>;
						clock-lanes = <0>;
						data-lanes = <1 2>;
						clock-noncontinuous;
						link-frequencies =
							/bits/ 64 <297000000>;
					};
				};
			};
		};
	};

	csi_frag2: fragment@103 {
		target = <&csi0>;
		csi: __overlay__ {
			status = "okay";

			port {
				csi0_ep: endpoint {
					remote-endpoint = <&csimx307_1>;
					clock-lanes = <0>;
					data-lanes = <1 2>;
					clock-noncontinuous;
				};
			};
		};
	};

	__overrides__ {
		
		cam0 = <&i2c_frag>, "target:0=",<&i2c_vc>,
		       <&csi_frag>, "target:0=",<&csi0>;
        cam1 = <&i2c_frag2>, "target:0=",<&i2c_arm>,
		       <&csi_frag2>, "target:0=",<&csi1>;
	};


};
